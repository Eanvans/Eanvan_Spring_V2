<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTD mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.Eanvan.mapper.PostMapper">

    <resultMap id="userMap" type="com.Eanvan.model.User">
        <id column="uid" property="uid"></id>
        <result column="username" property="username"></result>
        <result column="head_url" property="headUrl"></result>
    </resultMap>

    <resultMap id="postMap" type="com.Eanvan.model.Post">
        <id column="pid" property="pid"/>
        <result column="title" property="title"/>
        <result column="content" property="content"/>
        <result column="publish_time" property="publishTime"/>
        <result column="reply_time" property="replyTime"/>
        <result column="reply_count" property="replyCount"/>
        <result column="like_count" property="likeCount"/>
        <result column="scan_count" property="scanCount"/>
        <association property="user" javaType="com.Eanvan.model.User" resultMap="userMap"/>
    </resultMap>

    <select id="listPostByUid" resultType="com.Eanvan.model.Post">
        select uid,pid,title,publish_time from tb_post where uid=#{uid}
    </select>

    <select id="listPostByTid" resultMap="postMap">
        SELECT p.`pid`,p.`title`,p.`content`,LEFT(p.`publish_time`,10) as publish_time,LEFT(p.`reply_time`,10) as reply_time,p.`reply_count`,p.`like_count`,p.`scan_count`,u.`uid`,u.`username`,u.`head_url`
        FROM tb_post p JOIN tb_user u ON p.`uid` = u.`uid` where p.tid = #{tid} order by p.pid desc
    </select>

    <select id="getPostByPid" resultMap="postMap">
        SELECT p.`pid`,p.`title`,p.`content`,p.`publish_time`,p.`reply_time`,p.`reply_count`,p.`like_count`,p.`scan_count`,u.`uid`,u.`username`,u.`head_url`
        FROM tb_post p JOIN tb_user u ON p.`uid` = u.`uid` where p.pid = #{pid}
    </select>

    <select id="selectPostCount" resultType="int">
        select count(pid) from tb_post where tid != 1;
    </select>

    <select id="listPostByTime" resultMap="postMap">
        select u.uid,u.username,u.head_url,p.pid,p.title,p.publish_time,p.reply_time,p.reply_count,p.like_count,p.scan_count from tb_post p
        join tb_user u on p.uid = u.uid where p.tid != 1
        order by p.reply_time desc limit #{offset},#{limit};
    </select>

    <select id="selectPostCountByTid" resultType="int">
        select count(pid) from tb_post where tid = #{tid};
    </select>

    <select id="listSectionPostsByTid" resultMap="postMap">
        select u.uid,u.username,u.head_url,p.pid,p.title,p.publish_time,p.reply_time,p.reply_count,p.like_count,p.scan_count from tb_post p
        join tb_user u on p.uid = u.uid where p.tid = #{tid}
        order by p.reply_time desc limit #{offset},#{limit};
    </select>

    <select id="selectPostCountByTidAndCityId" resultType="int">
        select count(pid) from tb_post where tid = #{tid} and cityId = #{cityId};
    </select>

    <select id="listCityPostsByCityId" resultMap="postMap">
        select u.uid,u.username,u.head_url,p.pid,p.title,p.publish_time,p.reply_time,p.reply_count,p.like_count,p.scan_count from tb_post p
        join tb_user u on p.uid = u.uid where p.cityId = #{cityId}
        order by p.reply_time desc limit #{offset},#{limit};
    </select>

    <select id="selectPostCountByCityIdAndSectionName" resultType="int">
        select count(pid) from tb_post where cityId = #{cityId} and sectionName = #{sectionName}
    </select>

    <select id="listCitySectionPostsByCityIdAndSectionName" resultMap="postMap">
        select u.uid,u.username,u.head_url,p.pid,p.title,p.publish_time,p.reply_time,p.reply_count,p.like_count,p.scan_count from tb_post p
        join tb_user u on p.uid = u.uid where p.cityId = #{cityId} and sectionName = #{sectionName}
        order by p.reply_time desc limit #{offset},#{limit};
    </select>

    <insert id="insertPost">
        <selectKey resultType="int" order="AFTER" keyProperty="pid">
            select last_insert_id() as pid;
        </selectKey>
        insert into tb_post(title,content,publish_time,reply_time,reply_count,like_count,scan_count,uid,tid)
        values(#{title},#{content},#{publishTime},#{replyTime},#{replyCount},#{likeCount},#{scanCount},#{user.uid},#{topic.tid});
    </insert>

    <insert id="insertPostAttachment">
        <selectKey resultType="int" order="AFTER" keyProperty="pattid">
            select last_insert_id() as pattid;
        </selectKey>
        INSERT INTO tb_post_attachments (`uid`, `pic_url`)
        VALUES (#{uid}, #{picUrl});
    </insert>

    <update id="updateScanCount">
        update tb_post set scan_count = scan_count + 1 where pid = #{pid};
    </update>

    <update id="updateReplyCount">
        update tb_post set reply_count = reply_count + 1 where pid = #{pid};
    </update>

    <update id="updateReplyTime">
        update tb_post set reply_time = NOW() where pid = #{pid};
    </update>
</mapper>
